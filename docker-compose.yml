﻿version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: tubecompany-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - backend
      - frontend
    networks:
      - tubecompany-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tubecompany-backend
    # УБИРАЕМ проброс портов наружу
    # ports:
    #   - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - Telegram__BotToken=${TELEGRAM_BOT_TOKEN}
      - App__BaseUrl=${APP_BASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres  # Меняем на имя сервиса
      - POSTGRES_PORT=5432
    volumes:
      - ./backend/Data:/app/Data
    networks:
      - tubecompany-network
    restart: unless-stopped
    expose:
      - "8080"  # Делаем порт доступным только внутри сети

  postgres:
    image: postgres:15
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
    networks:
      - tubecompany-network
    # УБИРАЕМ проброс портов наружу для безопасности
    # ports:
    #   - "5433:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-tubecompany}"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "5432"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tubecompany-frontend
    # УБИРАЕМ проброс портов наружу
    # ports:
    #   - "3000:3000"
    depends_on:
      - backend
    networks:
      - tubecompany-network
    restart: unless-stopped
    expose:
      - "3000"  # Делаем порт доступным только внутри сети

networks:
  tubecompany-network:
    driver: bridge

volumes:
  postgres_data: